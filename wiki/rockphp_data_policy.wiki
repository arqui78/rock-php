#summary 数据存储和读取策略

= 原则 =
 
 * 能动态增加新的节点
 * 保证查询速度
 * 配置相当简单
 * 支持2000万用户数据

= 配置 =

{{{
return array(
  "rock" => array(//公共操作
     "master" => "xxx",
     "slaves" => array(
        "uri" => "xxx",
        "persist" => "xxx",
      )
  ),

  "logs" => array(
     "master" => "xxx",
     "slaves" => array(
        array(
          "uri" => "xxx",
          "persist" => "xxx",
          "weight" => 10//权重
        )
      ),
      "sharding" => 5//分片数
  ),
  "users" => array(
     "master" => "xxx",
     "slaves" => array(
         "uri" => "xxx",
         "persist" => "xxx",
         "weight" => 10
      ),
      "sharding" => 10
  )
);
}}}

= 分片 =

 * 将每一个collection分成N个，分别命名为：log_0, log1, .. logN

= 写入和更新 =

{{{
$db = Rdb::dbWithUid(1);
$db->select("logs")->insert($logArray);
}}}

这里的logs和上面配置中的logs对应

= 读取 =

{{{
$db = Rdb::dbWithUid(1);
$db->select("log")->id("xxxxxxxxxxx")->findOne();
}}}

这里的logs和上面配置中的logs对应